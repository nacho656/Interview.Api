// <auto-generated />
using System;
using Interview.Api.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Interview.Api.Migrations
{
    [DbContext(typeof(ApiContext))]
    [Migration("20230330005943_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Interview.Api.Domain.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Genre");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Science Fiction"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Animation"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Drama"
                        });
                });

            modelBuilder.Entity("Interview.Api.Domain.Media", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("Date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Media");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GenreId = 4,
                            IsActive = true,
                            ReleaseDate = new DateTime(2010, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Inception"
                        },
                        new
                        {
                            Id = 2,
                            GenreId = 4,
                            IsActive = true,
                            ReleaseDate = new DateTime(2009, 11, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "2012"
                        },
                        new
                        {
                            Id = 3,
                            GenreId = 1,
                            IsActive = true,
                            ReleaseDate = new DateTime(2015, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Martian"
                        },
                        new
                        {
                            Id = 4,
                            GenreId = 1,
                            IsActive = true,
                            ReleaseDate = new DateTime(1978, 7, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Star Wars - A New Hope"
                        },
                        new
                        {
                            Id = 5,
                            GenreId = 2,
                            IsActive = true,
                            ReleaseDate = new DateTime(2017, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Your Name"
                        },
                        new
                        {
                            Id = 6,
                            GenreId = 2,
                            IsActive = true,
                            ReleaseDate = new DateTime(2020, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Weathering with You"
                        },
                        new
                        {
                            Id = 7,
                            GenreId = 3,
                            IsActive = true,
                            ReleaseDate = new DateTime(2005, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Kung Fu Hustle"
                        },
                        new
                        {
                            Id = 8,
                            GenreId = 3,
                            IsActive = true,
                            ReleaseDate = new DateTime(2009, 6, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Hangover"
                        },
                        new
                        {
                            Id = 9,
                            GenreId = 5,
                            IsActive = true,
                            ReleaseDate = new DateTime(1996, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Scream"
                        },
                        new
                        {
                            Id = 10,
                            GenreId = 5,
                            IsActive = true,
                            ReleaseDate = new DateTime(2004, 10, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Saw"
                        },
                        new
                        {
                            Id = 11,
                            GenreId = 6,
                            IsActive = true,
                            ReleaseDate = new DateTime(1997, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Titanic"
                        },
                        new
                        {
                            Id = 12,
                            GenreId = 6,
                            IsActive = true,
                            ReleaseDate = new DateTime(2004, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Notebook"
                        },
                        new
                        {
                            Id = 13,
                            GenreId = 7,
                            IsActive = true,
                            ReleaseDate = new DateTime(1994, 10, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Shawshank Redemption"
                        },
                        new
                        {
                            Id = 14,
                            GenreId = 7,
                            IsActive = true,
                            ReleaseDate = new DateTime(1972, 3, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Godfather"
                        },
                        new
                        {
                            Id = 15,
                            GenreId = 4,
                            IsActive = false,
                            ReleaseDate = new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Gambit"
                        });
                });

            modelBuilder.Entity("Interview.Api.Domain.Media", b =>
                {
                    b.HasOne("Interview.Api.Domain.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });
#pragma warning restore 612, 618
        }
    }
}
